// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProductCategory {
  ELECTRONICS
  FURNITURE
  CLOTHING
  BOOKS
  SPORTS
  OTHER
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products  Product[]
  cartItems CartItem[]
  orders    Order[]
}

model Product {
  id          String          @id @default(uuid())
  title       String
  description String
  price       Float
  imageUrl    String
  blurHash    String
  category    ProductCategory
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  seller   User   @relation(fields: [sellerId], references: [id], onDelete: Cascade)
  sellerId String

  CartItem  CartItem[]
  OrderItem OrderItem[]
}

model CartItem {
  id       String   @id @default(uuid())
  quantity Int      @default(1)
  addedAt  DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
}

model Order {
  id        String   @id @default(uuid())
  total     Float
  createdAt DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  items OrderItem[]
}

model OrderItem {
  id String @id @default(uuid())

  title    String
  price    Float
  imageUrl String

  orderId String
  order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)

  productId String?
  product   Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
}
